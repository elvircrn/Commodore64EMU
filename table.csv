Adress area: $DC00-$DCFF, 56320-56575 Tasks: Keyboard, Joystick, Paddles, Datasette, IRQ control
"Address
Hex";"Address
Dec";Register;Function;Remark
$ DC00;56320;"0
PRA";Data Port A;"Monitoring/control of the 8 data lines of Port A. The lines are used for multiple purposes:
 Read/Write: Bit 0..7 keyboard matrix columns
 Read: Joystick Port 2: Bit 0..3 Direction (Left/Right/Up/Down), Bit 4 Fire button. 0 = activated.
 Read: Lightpen: Bit 4 (as fire button), connected also with ""/LP"" (Pin 9) of the VIC
 Read: Paddles: Bit 2..3 Fire buttons, Bit 6..7 Switch control port 1 (%01=Paddles A) or 2 (%10=Paddles B)"
$DC01;56321;"1
PRB";Data Port B;"Monitoring/control of the 8 data lines of Port B. The lines are used for multiple purposes:
 Read/Write: Bit 0..7 keyboard matrix rows
 Read: Joystick Port 1: Bit 0..3 Direction (Left/Right/Up/Down), Bit 4 Fire button. 0 = activated.
 Read: Bit 6: Timer A: Toggle/Impulse output (see register 14 bit 2)
 Read: Bit 7: Timer B: Toggle/Impulse output (see register 15 bit 2)"
$DC02;56322;"2
DDRA";"Data Direction
Port A";Bit X: 0=Input (read only), 1=Output (read and write)
$ DC03;56323;"3
DDRB";"Data Direction
Port B";Bit X: 0=Input (read only), 1=Output (read and write)
$DC04;56324;"4
TA LO";"Timer A
Low Byte";"Read: actual value Timer A (Low Byte)
 Writing: Set latch of Timer A (Low Byte)"
$DC05;56325;"5
TA HI";"Timer A
High Byte";"Read: actual value Timer A (High Byte)
 Writing: Set latch of timer A (High Byte) - if the timer is stopped, the high-byte will automatically be re-set as well"
$ DC06;56326;"6
TB LO";"Timer B
Low Byte";"Read: actual value Timer B (Low Byte)
 Writing: Set latch of Timer B (Low Byte)"
$ DC07;56327;"7
TB HI";"Timer B
High Byte";"Read: actual value Timer B (High Byte)
 Writing: Set latch of timer B (High Byte) - if the timer is stopped, the high-byte will automatically be re-set as well"
$DC08;56328;"8
TOD 10THS";"Real Time Clock
1/10s";"Read:
 Bit 0..3: Tenth seconds in BCD-format ($0-$9)
 Bit 4..7: always 0
 Writing:
 Bit 0..3: if CRB-Bit7=0: Set the tenth seconds in BCD-format
 Bit 0..3: if CRB-Bit7=1: Set the tenth seconds of the alarm time in BCD-format"
$DC09;56329;"9
TOD SEC";"Real Time Clock
Seconds";"Bit 0..3: Single seconds in BCD-format ($0-$9)
 Bit 4..6: Ten seconds in BCD-format ($0-$5)
 Bit 7: always 0"
$DC0A;56330;"10
TOD MIN";"Real Time Clock
Minutes";"Bit 0..3: Single minutes in BCD-format( $0-$9)
 Bit 4..6: Ten minutes in BCD-format ($0-$5)
 Bit 7: always 0"
$DC0B;56331;"11
TOD HR";"Real Time Clock
Hours";"Bit 0..3: Single hours in BCD-format ($0-$9)
 Bit 4..6: Ten hours in BCD-format ($0-$5)
 Bit 7: Differentiation AM/PM, 0=AM, 1=PM
 Writing into this register stops TOD, until register 8 (TOD 10THS) will be read."
$DC0C;56332;"12
SDR";"Serial
shift register";The byte within this register will be shifted bitwise to or from the SP-pin with every positive slope at the CNT-pin.
$DC0D;56333;"13
ICR";"Interrupt Control
and status";"CIA1 is connected to the IRQ-Line.
 Read: (Bit0..4 = INT DATA, Origin of the interrupt)
 Bit 0: 1 = Underflow Timer A
 Bit 1: 1 = Underflow Timer B
 Bit 2: 1 = Time of day and alarm time is equal
 Bit 3: 1 = SDR full or empty, so full byte was transferred, depending of operating mode serial bus
 Bit 4: 1 = IRQ Signal occured at FLAG-pin (cassette port Data input, serial bus SRQ IN)
 Bit 5..6: always 0
 Bit 7: 1 = IRQ An interrupt occured, so at least one bit of INT MASK and INT DATA is set in both registers.
 Flags will be cleared after reading the register!
 Write: (Bit 0..4 = INT MASK, Interrupt mask)
 Bit 0: 1 = Interrupt release through timer A underflow
 Bit 1: 1 = Interrupt release through timer B underflow
 Bit 2: 1 = Interrupt release if clock=alarmtime
 Bit 3: 1 = Interrupt release if a complete byte has been received/sent.
 Bit 4: 1 = Interrupt release if a positive slope occurs at the FLAG-Pin.
 Bit 5..6: unused
 Bit 7: Source bit. 0 = set bits 0..4 are clearing the according mask bit. 1 = set bits 0..4 are setting the according mask bit. If all bits 0..4 are cleared, there will be no change to the mask."
$DC0E;56334;"14
CRA";Control Timer A;"Bit 0: 0 = Stop timer; 1 = Start hours
 Bit 1: 1 = Indicates a timer underflow at port B in bit 6.
 Bit 2: 0 = Through a timer overflow, bit 6 of port B will get high for one cycle , 1 = Through a timer underflow, bit 6 of port B will be inverted
 Bit 3: 0 = Timer-restart after underflow (latch will be reloaded), 1 = Timer stops after underflow.
 Bit 4: 1 = Load latch into the timer once.
 Bit 5: 0 = Timer counts system cycles, 1 = Timer counts positive slope at CNT-pin
 Bit 6: Direction of the serial shift register, 0 = SP-pin is input (read), 1 = SP-pin is output (write)
 Bit 7: Real Time Clock, 0 = 60 Hz, 1 = 50 Hz"
$DC0F;56335;"15
CRB";Control Timer B;"Bit 0: 0 = Stop timer; 1 = Start timer
 Bit 1: 1 = Indicates a timer underflow at port B in bit 7.
 Bit 2: 0 = Through a timer overflow, bit 7 of port B will get high for one cycle , 1 = Through a timer underflow, bit 7 of port B will be inverted
 Bit 3: 0 = Timer-restart after underflow (latch will be reloaded), 1 = Timer stops after underflow.
 Bit 4: 1 = Load latch into the timer once.
 Bit 5..6:

 %00 = Timer counts System cycle

 %01 = Timer counts positive slope on CNT-pin

 %10 = Timer counts underflow of timer A

 %11 = Timer counts underflow of timer A if the CNT-pin is high
 Bit 7: 0 = Writing into the TOD register sets the clock time, 1 = Writing into the TOD register sets the alarm time."
$DC10-$DCFF;56336-56575;-;-;The CIA 1 register are mirrored each 16 Bytes
